{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeAndExtractProps;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // extract passThroughProps, and\n// if `as` is a JSX/ReactElement, then merge props with `as`'s props\n\n\nfunction mergeAndExtractProps(props, knownProps) {\n  var mergedProps = {};\n  var passThroughProps = {};\n  Object.keys(props).forEach(function (key) {\n    mergedProps[key] = props[key]; // pass through all props that are not on the knownProps list\n\n    if (!knownProps[key]) passThroughProps[key] = props[key];\n  });\n\n  if (_react2.default.isValidElement(props.as)) {\n    // if `as` is JSX/ReactElement, then merge in it's props\n    Object.keys(props.as.props).forEach(function (key) {\n      mergedProps[key] = props.as.props[key];\n      if (!knownProps[key]) passThroughProps[key] = props.as.props[key];\n    }); // set `as` to the JSX/ReactElement's `type`:\n    // if the ReactElement is a ReactDOMElement then `type` will be a string, e.g. 'div', 'span'\n    // if the ReactElement is a ReactComponentElement, then `type` will be\n    // either a ReactClass or a ReactFunctionalComponent, e.g. as={<MyComponent />}\n    // https://facebook.github.io/react/docs/glossary.html\n\n    mergedProps.as = props.as.type;\n  } else {\n    mergedProps.as = props.as;\n  }\n\n  return {\n    mergedProps: mergedProps,\n    passThroughProps: passThroughProps\n  };\n}\n\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}